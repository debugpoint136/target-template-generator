[{"sheetname":"assay","query":"WITH {json} as data\n    UNWIND data.assay as row\n    MERGE (assay:assay {accession: row.accession})\n    SET \n        assay.user_accession = row.user_accession,\n\t\tassay.category = row.category,\n\t\tassay.technique = row.technique,\n\t\tassay.assay_target = row.assay_target,\n\t\tassay.population = row.population,\n\t\tassay.subcellular_fraction = row.subcellular_fraction,\n\t\tassay.strand_specificity = row.strand_specificity,\n\t\tassay.assay_protocol = row.assay_protocol,\n\t\tassay.starting_cells = row.starting_cells,\n\t\tassay.tissue_weight = row.tissue_weight,\n\t\tassay.starting_cell_count = row.starting_cell_count,\n\t\tassay.starting_nucleic_acid = row.starting_nucleic_acid,\n\t\tassay.date_extracted = row.date_extracted,\n\t\tassay.date_performed = row.date_performed,\n\t\tassay.processed_by = row.processed_by,\n\t\tassay.detergent_added = row.detergent_added,\n\t\tassay.filtering_method = row.filtering_method,\n\t\tassay.comments = row.comments\n        WITH {json} as data\n        UNWIND data.assay as row\n        MATCH (assay:assay {accession: row.accession})\n        WITH assay, row, CASE  WHEN (row.recruits <> \"\") THEN ['ok'] ELSE [] END as array1\n        FOREACH (el1 in array1 | MERGE (assay_recruits_reagent:reagent {accession:row.recruits})\n            MERGE (assay)-[:recruits]->(assay_recruits_reagent))\n        \n        WITH {json} as data\n        UNWIND data.assay as row\n        MATCH (assay:assay {accession: row.accession})\n        WITH assay, row, CASE  WHEN (row.assay_input <> \"\") THEN ['ok'] ELSE [] END as array1\n        FOREACH (el1 in array1 | MERGE (assay_assay_input_biosample:biosample {accession:row.assay_input})\n            MERGE (assay)-[:assay_input]->(assay_assay_input_biosample))\n        \n        WITH {json} as data\n        UNWIND data.assay as row\n        MATCH (assay:assay {accession: row.accession})\n        WITH assay, row, CASE  WHEN (row.pooled_from <> \"\") THEN ['ok'] ELSE [] END as array1\n        FOREACH (el1 in array1 | MERGE (assay_pooled_from_assay:assay {accession:row.pooled_from})\n            MERGE (assay)-[:pooled_from]->(assay_pooled_from_assay))\n        "},{"sheetname":"biosample","query":"WITH {json} as data\n    UNWIND data.biosample as row\n    MERGE (biosample:biosample {accession: row.accession})\n    SET \n        biosample.user_accession = row.user_accession,\n\t\tbiosample.tissue_classification = row.tissue_classification,\n\t\tbiosample.sample_type = row.sample_type,\n\t\tbiosample.tissue = row.tissue,\n\t\tbiosample.specific_tissue = row.specific_tissue,\n\t\tbiosample.collection_protocol = row.collection_protocol,\n\t\tbiosample.organ_weight = row.organ_weight,\n\t\tbiosample.liver_hist_image_HE = row.liver_hist_image_HE,\n\t\tbiosample.liver_hist_image_ORO = row.liver_hist_image_ORO,\n\t\tbiosample.cell_culture_protocol = row.cell_culture_protocol,\n\t\tbiosample.culture_length = row.culture_length,\n\t\tbiosample.passage_number = row.passage_number,\n\t\tbiosample.comments = row.comments\n        WITH {json} as data\n        UNWIND data.biosample as row\n        MATCH (biosample:biosample {accession: row.accession})\n        WITH biosample, row, CASE  WHEN (row.derived_from <> \"\") THEN ['ok'] ELSE [] END as array1\n        FOREACH (el1 in array1 | MERGE (biosample_derived_from_mouse:mouse {accession:row.derived_from})\n            MERGE (biosample)-[:derived_from]->(biosample_derived_from_mouse))\n        \n        WITH {json} as data\n        UNWIND data.biosample as row\n        MATCH (biosample:biosample {accession: row.accession})\n        WITH biosample, row, CASE  WHEN (row.pooled_from <> \"\") THEN ['ok'] ELSE [] END as array1\n        FOREACH (el1 in array1 | MERGE (biosample_pooled_from_biosample:biosample {accession:row.pooled_from})\n            MERGE (biosample)-[:pooled_from]->(biosample_pooled_from_biosample))\n        "},{"sheetname":"mouse","query":"WITH {json} as data\n    UNWIND data.mouse as row\n    MERGE (mouse:mouse {accession: row.accession})\n    SET \n        mouse.user_accession = row.user_accession,\n\t\tmouse.organism = row.organism,\n\t\tmouse.source = row.source,\n\t\tmouse.strain = row.strain,\n\t\tmouse.sex = row.sex,\n\t\tmouse.internal_id = row.internal_id,\n\t\tmouse.mouse_age_collection = row.mouse_age_collection,\n\t\tmouse.life_stage_collection = row.life_stage_collection,\n\t\tmouse.animal_weight_sac = row.animal_weight_sac,\n\t\tmouse.perfusion = row.perfusion,\n\t\tmouse.fasted = row.fasted,\n\t\tmouse.fasted_hours = row.fasted_hours,\n\t\tmouse.liver_tumors = row.liver_tumors,\n\t\tmouse.tumor_organs = row.tumor_organs,\n\t\tmouse.technicians = row.technicians,\n\t\tmouse.comments = row.comments\n        WITH {json} as data\n        UNWIND data.mouse as row\n        MATCH (mouse:mouse {accession: row.accession})\n        WITH mouse, row, CASE  WHEN (row.born_to <> \"\") THEN ['ok'] ELSE [] END as array1\n        FOREACH (el1 in array1 | MERGE (mouse_born_to_litter:litter {accession:row.born_to})\n            MERGE (mouse)-[:born_to]->(mouse_born_to_litter))\n        \n        WITH {json} as data\n        UNWIND data.mouse as row\n        MATCH (mouse:mouse {accession: row.accession})\n        WITH mouse, row, CASE  WHEN (row.fed <> \"\") THEN ['ok'] ELSE [] END as array1\n        FOREACH (el1 in array1 | MERGE (mouse_fed_diet:diet {accession:row.fed})\n            MERGE (mouse)-[:fed]->(mouse_fed_diet))\n        \n        WITH {json} as data\n        UNWIND data.mouse as row\n        MATCH (mouse:mouse {accession: row.accession})\n        WITH mouse, row, CASE  WHEN (row.undergoes <> \"\") THEN ['ok'] ELSE [] END as array1\n        FOREACH (el1 in array1 | MERGE (mouse_undergoes_treatment:treatment {accession:row.undergoes})\n            MERGE (mouse)-[:undergoes]->(mouse_undergoes_treatment))\n        \n        WITH {json} as data\n        UNWIND data.mouse as row\n        MATCH (mouse:mouse {accession: row.accession})\n        WITH mouse, row, CASE  WHEN (row.part_of <> \"\") THEN ['ok'] ELSE [] END as array1\n        FOREACH (el1 in array1 | MERGE (mouse_part_of_bioproject:bioproject {accession:row.part_of})\n            MERGE (mouse)-[:part_of]->(mouse_part_of_bioproject))\n        "}]